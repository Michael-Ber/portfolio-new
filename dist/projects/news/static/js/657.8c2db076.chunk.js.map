{"version":3,"file":"static/js/657.8c2db076.chunk.js","mappings":"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","sources":["components/utils/dateChangeToUTC.js","components/HOC/withDate.js","components/search/SearchResultItem.js","components/pages/SearchResult.js"],"sourcesContent":["const dateChangeToUTC = (date) => {\r\n    const dateEdited = new Date(date);\r\n    const dateNow = new Date();\r\n    return {\r\n        utcMonth: dateEdited.getUTCMonth(),\r\n        utcDate: dateEdited.getUTCDate(),\r\n        utcHours: dateEdited.getUTCHours(),\r\n        utcMinutes: dateEdited.getUTCMinutes(),\r\n        utcNowMonth: dateNow.getUTCMonth(),\r\n        utcNowDate: dateNow.getUTCDate(),\r\n        utcNowHours: dateNow.getUTCHours(),\r\n        utcNowMinutes: dateNow.getUTCMinutes(),\r\n    }\r\n}\r\n\r\nexport default dateChangeToUTC;","import dateChangeToUTC from '../utils/dateChangeToUTC';\r\n\r\nconst months = {\r\n    0: 'january',\r\n    1: 'february',\r\n    2: 'march',\r\n    3: 'april',\r\n    4: 'may',\r\n    5: 'june',\r\n    6: 'july',\r\n    7: 'august',\r\n    8: 'september',\r\n    9: 'october',\r\n    10: 'november',\r\n    11: 'december'\r\n};\r\n\r\nconst withDate = (WrappedComponent, props) => {\r\n    const {\r\n        utcMonth, \r\n        utcDate, \r\n        utcHours, \r\n        utcMinutes,\r\n        utcNowMonth,\r\n        utcNowDate,\r\n        utcNowHours,\r\n        utcNowMinutes\r\n    } = dateChangeToUTC(props.publishedAt);\r\n\r\n    const renderDate = () => {\r\n        if(utcMonth !== utcNowMonth && utcDate < utcNowDate) {\r\n            return <span className=\"item-app-latest__time\">{(utcNowMonth - utcMonth) > 1 && utcNowMonth - utcMonth} {`${(utcNowMonth - utcMonth)>4 ? 'месяцев' : ((utcNowMonth - utcMonth)===1) ? 'месяц' :  'месяца'}`} назад</span>\r\n        }else if(utcMonth === utcNowMonth && utcDate !== utcNowDate) {\r\n            return <span className=\"item-app-latest__time\">{(utcNowDate - utcDate) > 1 && utcNowDate - utcDate} {`${(utcNowDate - utcDate)>4 ? 'дней' : ((utcNowDate - utcDate)===1) ? 'вчера' :  'дня'}`} {(utcNowDate - utcDate) > 1 && 'назад'}</span>\r\n        }else if(utcMonth === utcNowMonth && utcDate === utcNowDate && utcHours !== utcNowHours) {\r\n            return <span className=\"item-app-latest__time\">{(utcNowHours - utcHours) > 1 && utcNowHours - utcHours} {`${(utcNowDate - utcDate)>4 ? 'часов' : ((utcNowDate - utcDate)===1) ? 'час' :  'часа'}`} {(utcNowDate - utcDate) > 1 && 'назад'}</span>\r\n        }else if(utcMonth !== utcNowMonth && utcDate > utcNowDate) {\r\n            return <span className=\"item-app-latest__time\">{utcDate} {months[utcMonth]}</span>\r\n        }\r\n    }\r\n    const date = renderDate();\r\n    return () => {\r\n        return (\r\n            <WrappedComponent date={date} {...props}/>\r\n        )\r\n    }\r\n} \r\n\r\nexport default withDate;","import { Link } from 'react-router-dom';\r\nimport './searchResultItem.scss';\r\n\r\nconst SearchResultItem = ({title, url, urlToImage, author, description, date}) => {\r\n    return (\r\n        <div className=\"search-page__item item-search-page\">\r\n            <div className=\"item-search-page__left\">\r\n                <div className=\"item-search-page__img\">\r\n                    <img src={urlToImage} alt=\"search page item\" />\r\n                </div>\r\n            </div>\r\n            <div className=\"item-search-page__right\">\r\n                <Link to={`${url}`} className=\"item-search-page__link\">\r\n                    <div className=\"item-search-page__title\">{title}</div>\r\n                    <div className=\"item-search-page__info\">\r\n                        <span className=\"item-search-page__author\">{author}</span>\r\n                        <span className=\"item-search-page__time\">{date}</span>\r\n                    </div>\r\n                    <p className=\"item-search-page__content\">{description}</p>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchResultItem;","import { useSelector, useDispatch } from 'react-redux';\r\nimport { useEffect } from 'react';\r\nimport { fetchSearchNews } from '../news/NewsSlice';\r\nimport withDate from '../HOC/withDate';\r\nimport SearchResultItem from '../../components/search/SearchResultItem';\r\nimport './searchResult.scss';\r\nimport { nanoid } from '@reduxjs/toolkit';\r\n\r\nconst SearchResult = () => {\r\n    const news = useSelector(state => state.news.searchedArticles);\r\n    const searchRequest = localStorage.getItem('searchRequest');\r\n    const { language } = useSelector(state => state.news);\r\n    const dispatch = useDispatch();\r\n\r\n    const renderNews = (arr) => {\r\n        return arr.map((item, i) => {\r\n            const SearchResultItemWithDate = withDate(SearchResultItem, {...item});\r\n            return (\r\n                <SearchResultItemWithDate key={nanoid()} />\r\n            )\r\n        })\r\n    }\r\n    useEffect(() => {\r\n        dispatch(fetchSearchNews({category: searchRequest, language}))\r\n    }, [searchRequest])\r\n\r\n    \r\n    const elements = renderNews(news);\r\n    return (\r\n        <div className=\"app-search-page search-page\">\r\n            <h2 className='search-page__title'>Новости</h2>\r\n            {elements}\r\n        </div>  \r\n    )\r\n}\r\n\r\nexport default SearchResult;"],"names":["date","dateEdited","Date","dateNow","utcMonth","getUTCMonth","utcDate","getUTCDate","utcHours","getUTCHours","utcMinutes","getUTCMinutes","utcNowMonth","utcNowDate","utcNowHours","utcNowMinutes","months","WrappedComponent","props","_dateChangeToUTC","dateChangeToUTC","publishedAt","_jsxs","className","children","concat","_jsx","_objectSpread","_ref","title","url","urlToImage","author","description","src","alt","Link","to","news","useSelector","state","searchedArticles","searchRequest","localStorage","getItem","language","dispatch","useDispatch","useEffect","fetchSearchNews","category","elements","map","item","i","SearchResultItemWithDate","withDate","SearchResultItem","nanoid"],"sourceRoot":""}