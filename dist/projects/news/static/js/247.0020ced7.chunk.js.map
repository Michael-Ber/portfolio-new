{"version":3,"file":"static/js/247.0020ced7.chunk.js","mappings":"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","sources":["components/utils/dateChangeToUTC.js","components/HOC/withDate.js","components/HOC/withStoreData.js","components/current-news/NewsItem.js","components/current-news/NewsContent.js","components/current-news/CurrentNews.js","components/popular/PopularItem.js","components/popular/Popular.js","components/news/News.js"],"sourcesContent":["const dateChangeToUTC = (date) => {\r\n    const dateEdited = new Date(date);\r\n    const dateNow = new Date();\r\n    return {\r\n        utcMonth: dateEdited.getUTCMonth(),\r\n        utcDate: dateEdited.getUTCDate(),\r\n        utcHours: dateEdited.getUTCHours(),\r\n        utcMinutes: dateEdited.getUTCMinutes(),\r\n        utcNowMonth: dateNow.getUTCMonth(),\r\n        utcNowDate: dateNow.getUTCDate(),\r\n        utcNowHours: dateNow.getUTCHours(),\r\n        utcNowMinutes: dateNow.getUTCMinutes(),\r\n    }\r\n}\r\n\r\nexport default dateChangeToUTC;","import dateChangeToUTC from '../utils/dateChangeToUTC';\r\n\r\nconst months = {\r\n    0: 'january',\r\n    1: 'february',\r\n    2: 'march',\r\n    3: 'april',\r\n    4: 'may',\r\n    5: 'june',\r\n    6: 'july',\r\n    7: 'august',\r\n    8: 'september',\r\n    9: 'october',\r\n    10: 'november',\r\n    11: 'december'\r\n};\r\n\r\nconst withDate = (WrappedComponent, props) => {\r\n    const {\r\n        utcMonth, \r\n        utcDate, \r\n        utcHours, \r\n        utcMinutes,\r\n        utcNowMonth,\r\n        utcNowDate,\r\n        utcNowHours,\r\n        utcNowMinutes\r\n    } = dateChangeToUTC(props.publishedAt);\r\n\r\n    const renderDate = () => {\r\n        if(utcMonth !== utcNowMonth && utcDate < utcNowDate) {\r\n            return <span className=\"item-app-latest__time\">{(utcNowMonth - utcMonth) > 1 && utcNowMonth - utcMonth} {`${(utcNowMonth - utcMonth)>4 ? 'месяцев' : ((utcNowMonth - utcMonth)===1) ? 'месяц' :  'месяца'}`} назад</span>\r\n        }else if(utcMonth === utcNowMonth && utcDate !== utcNowDate) {\r\n            return <span className=\"item-app-latest__time\">{(utcNowDate - utcDate) > 1 && utcNowDate - utcDate} {`${(utcNowDate - utcDate)>4 ? 'дней' : ((utcNowDate - utcDate)===1) ? 'вчера' :  'дня'}`} {(utcNowDate - utcDate) > 1 && 'назад'}</span>\r\n        }else if(utcMonth === utcNowMonth && utcDate === utcNowDate && utcHours !== utcNowHours) {\r\n            return <span className=\"item-app-latest__time\">{(utcNowHours - utcHours) > 1 && utcNowHours - utcHours} {`${(utcNowDate - utcDate)>4 ? 'часов' : ((utcNowDate - utcDate)===1) ? 'час' :  'часа'}`} {(utcNowDate - utcDate) > 1 && 'назад'}</span>\r\n        }else if(utcMonth !== utcNowMonth && utcDate > utcNowDate) {\r\n            return <span className=\"item-app-latest__time\">{utcDate} {months[utcMonth]}</span>\r\n        }\r\n    }\r\n    const date = renderDate();\r\n    return () => {\r\n        return (\r\n            <WrappedComponent date={date} {...props}/>\r\n        )\r\n    }\r\n} \r\n\r\nexport default withDate;","import { useSelector } from 'react-redux';\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nconst withStoreData = (WrappedComponent) => {\r\n    return () => {\r\n        const { loadingStatus } = useSelector(state => state.news);\r\n        const { category } = useSelector(state => state.news);\r\n        const news = useSelector(state => state.news.articles);\r\n\r\n        if(loadingStatus === 'loading') {\r\n            return <Spinner />\r\n        }else if(news.length === 0) {\r\n            return <h2>Статей нет</h2>\r\n        }\r\n\r\n        return (\r\n            <WrappedComponent news={news} category={category} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStoreData;","import './newsItem.scss';\r\n\r\nconst NewsItem = ({title, urlToImage, elementNumber, handleNews, activeNews}) => {\r\n    const classNames = elementNumber === activeNews ? 'tabs-app-main__item tabs-app-main__item_active' : 'tabs-app-main__item';\r\n\r\n    const renderTitle = (str) => {\r\n        return str.length > 80 ? str.slice(0, 80) + ' ...': str;\r\n    }\r\n\r\n    const modifiedTitle = renderTitle(title)\r\n    return (\r\n        <div onClick={handleNews} className={classNames}>\r\n            <div className=\"tabs-app-main__img\">\r\n                <img src={urlToImage} alt=\"latest news\" />\r\n            </div>\r\n            <h3 className=\"tabs-app-main__title\">{modifiedTitle}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsItem;","import { Link } from 'react-router-dom';\r\n\r\nconst NewsContent = ({category, title, url, date}) => {\r\n  \r\n    if(!title) {\r\n        return \r\n    }\r\n    return (\r\n        <div className=\"tabs-app-main__content\">\r\n            <div className=\"app-main__header\">\r\n                <h2 className=\"app-main__category\">{category}</h2>\r\n                <span className=\"app-main__time\">{date}</span>\r\n            </div>\r\n            <Link to={url} className=\"app-main__link\">\r\n                <h1 className=\"app-main__title\">{title}</h1>\r\n            </Link>\r\n        </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default NewsContent;","import { useEffect, useState, useCallback, memo } from 'react';\r\nimport { nanoid } from '@reduxjs/toolkit';\r\nimport withStoreData from '../HOC/withStoreData';\r\nimport NewsItem from './NewsItem';\r\nimport NewsContent from './NewsContent';\r\nimport './currentNews.scss';\r\nimport withDate from '../HOC/withDate';\r\n\r\nconst CurrentNews = memo(({news, category}) => {\r\n    const [firstNews] = news;\r\n    const [currentNews, setCurrentNews] = useState(firstNews);\r\n    const [activeNews, setActiveNews] = useState(0);\r\n    \r\n    const handleNews = useCallback((i) => {\r\n        setCurrentNews(news[i]);\r\n        setActiveNews(i);\r\n    }, [setCurrentNews, setActiveNews, news])\r\n\r\n    useEffect(() => {\r\n        setCurrentNews(firstNews)\r\n    }, [firstNews])\r\n\r\n    const NewContentWithDate = withDate(NewsContent, {category, ...currentNews})\r\n\r\n    return (\r\n        <div className=\"app-main__tabs tabs-app-main\">\r\n            <div className=\"tabs-app-main__contents\">\r\n                {<NewContentWithDate/>}\r\n            </div>\r\n            <div className=\"tabs-app-main__items\">\r\n                {news.slice(0, 2).map((item, i) => {\r\n                    return <NewsItem key={nanoid()} {...item} activeNews={activeNews} elementNumber = {i} handleNews={() => handleNews(i)}/>\r\n                })}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withStoreData(CurrentNews);","import { memo } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './popularItem.scss';\r\n\r\nconst PopularItem = memo(({title, urlToImage, url, category, date}) => {\r\n    const renderTitle = (str) => {\r\n        return str.length > 100 ? str.slice(0, 100) + ' ...': str;\r\n    }\r\n    const modifiedTitle = renderTitle(title);\r\n    return (\r\n        <li className=\"popular-app-main__item item-popular-app-main\">\r\n            <Link to={url} className=\"item-popular-app-main__link\">\r\n                <div className=\"item-popular-app-main__wrapper\">\r\n                    <div className=\"item-popular-app-main__img\">\r\n                        <img src={urlToImage} alt=\"popular item news\" />\r\n                    </div>\r\n                    <div className=\"item-popular-app-main__content\">\r\n                        <span className=\"item-popular-app-main__category\">{category}</span>\r\n                        <span className=\"item-popular-app-main__time\">{date}</span>\r\n                        <h2 className=\"item-popular-app-main__title\">{modifiedTitle}</h2>\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n        </li>\r\n    )\r\n})\r\n\r\nexport default PopularItem;","import { memo } from 'react';\r\nimport withStoreData from '../HOC/withStoreData';\r\nimport PopularItem from './PopularItem';\r\nimport withDate from '../HOC/withDate';\r\nimport { nanoid } from '@reduxjs/toolkit';\r\nimport './popular.scss';\r\n\r\nconst Popular = memo(({news, category}) => {\r\n\r\n    const renderItems = (arr) => {\r\n        return arr.slice(2, 7).map((item, i) => {\r\n            const PopularItemWithDate = withDate(PopularItem, {...item, category});\r\n            return (\r\n                <PopularItemWithDate key={nanoid()} />\r\n            )\r\n        })\r\n    }\r\n\r\n    const elements =  renderItems(news);\r\n    return (\r\n        <div className=\"app-main__popular popular-app-main\">\r\n            <h1 className=\"popular-app-main__title\">Популярные новости за неделю</h1>\r\n            <ul className=\"popular-app-main__list\">\r\n                {elements}\r\n            </ul>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withStoreData(Popular);","import { memo, useEffect } from \"react\";\r\nimport {  fetchNews } from \"./NewsSlice\";\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport CurrentNews from \"../current-news/CurrentNews\";\r\nimport Popular from \"../popular/Popular\";\r\nimport './news.scss';\r\n\r\nconst News = memo(() => {\r\n    const { country, category } = useSelector(state => state.news);\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch(fetchNews({country, category}))\r\n    }, [category, country])\r\n\r\n    return (\r\n        \r\n        <section className=\"app-main\">\r\n            <div className=\"app-main__left\">\r\n                <CurrentNews />\r\n            </div>\r\n            <div className=\"app-main__right\">\r\n                <Popular />\r\n            </div>\r\n            \r\n        </section>\r\n        \r\n        \r\n    )\r\n})\r\n\r\nexport default News;"],"names":["date","dateEdited","Date","dateNow","utcMonth","getUTCMonth","utcDate","getUTCDate","utcHours","getUTCHours","utcMinutes","getUTCMinutes","utcNowMonth","utcNowDate","utcNowHours","utcNowMinutes","months","WrappedComponent","props","_dateChangeToUTC","dateChangeToUTC","publishedAt","_jsxs","className","children","concat","_jsx","_objectSpread","loadingStatus","useSelector","state","news","category","articles","Spinner","length","_ref","str","title","urlToImage","elementNumber","handleNews","classNames","activeNews","modifiedTitle","slice","onClick","src","alt","url","Link","to","CurrentNews","memo","firstNews","_slicedToArray","_useState","useState","_useState2","currentNews","setCurrentNews","_useState3","_useState4","setActiveNews","useCallback","i","useEffect","NewContentWithDate","withDate","NewsContent","map","item","NewsItem","nanoid","withStoreData","Popular","elements","PopularItemWithDate","PopularItem","_useSelector","country","dispatch","useDispatch","fetchNews"],"sourceRoot":""}