{"version":3,"file":"static/js/585.439c7526.chunk.js","mappings":"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","sources":["components/utils/dateChangeToUTC.js","components/HOC/withDate.js","components/HOC/withStoreData.js","components/latest/LatestPostItem.js","components/latest/LatestPost.js"],"sourcesContent":["const dateChangeToUTC = (date) => {\r\n    const dateEdited = new Date(date);\r\n    const dateNow = new Date();\r\n    return {\r\n        utcMonth: dateEdited.getUTCMonth(),\r\n        utcDate: dateEdited.getUTCDate(),\r\n        utcHours: dateEdited.getUTCHours(),\r\n        utcMinutes: dateEdited.getUTCMinutes(),\r\n        utcNowMonth: dateNow.getUTCMonth(),\r\n        utcNowDate: dateNow.getUTCDate(),\r\n        utcNowHours: dateNow.getUTCHours(),\r\n        utcNowMinutes: dateNow.getUTCMinutes(),\r\n    }\r\n}\r\n\r\nexport default dateChangeToUTC;","import dateChangeToUTC from '../utils/dateChangeToUTC';\r\n\r\nconst months = {\r\n    0: 'january',\r\n    1: 'february',\r\n    2: 'march',\r\n    3: 'april',\r\n    4: 'may',\r\n    5: 'june',\r\n    6: 'july',\r\n    7: 'august',\r\n    8: 'september',\r\n    9: 'october',\r\n    10: 'november',\r\n    11: 'december'\r\n};\r\n\r\nconst withDate = (WrappedComponent, props) => {\r\n    const {\r\n        utcMonth, \r\n        utcDate, \r\n        utcHours, \r\n        utcMinutes,\r\n        utcNowMonth,\r\n        utcNowDate,\r\n        utcNowHours,\r\n        utcNowMinutes\r\n    } = dateChangeToUTC(props.publishedAt);\r\n\r\n    const renderDate = () => {\r\n        if(utcMonth !== utcNowMonth && utcDate < utcNowDate) {\r\n            return <span className=\"item-app-latest__time\">{(utcNowMonth - utcMonth) > 1 && utcNowMonth - utcMonth} {`${(utcNowMonth - utcMonth)>4 ? 'месяцев' : ((utcNowMonth - utcMonth)===1) ? 'месяц' :  'месяца'}`} назад</span>\r\n        }else if(utcMonth === utcNowMonth && utcDate !== utcNowDate) {\r\n            return <span className=\"item-app-latest__time\">{(utcNowDate - utcDate) > 1 && utcNowDate - utcDate} {`${(utcNowDate - utcDate)>4 ? 'дней' : ((utcNowDate - utcDate)===1) ? 'вчера' :  'дня'}`} {(utcNowDate - utcDate) > 1 && 'назад'}</span>\r\n        }else if(utcMonth === utcNowMonth && utcDate === utcNowDate && utcHours !== utcNowHours) {\r\n            return <span className=\"item-app-latest__time\">{(utcNowHours - utcHours) > 1 && utcNowHours - utcHours} {`${(utcNowDate - utcDate)>4 ? 'часов' : ((utcNowDate - utcDate)===1) ? 'час' :  'часа'}`} {(utcNowDate - utcDate) > 1 && 'назад'}</span>\r\n        }else if(utcMonth !== utcNowMonth && utcDate > utcNowDate) {\r\n            return <span className=\"item-app-latest__time\">{utcDate} {months[utcMonth]}</span>\r\n        }\r\n    }\r\n    const date = renderDate();\r\n    return () => {\r\n        return (\r\n            <WrappedComponent date={date} {...props}/>\r\n        )\r\n    }\r\n} \r\n\r\nexport default withDate;","import { useSelector } from 'react-redux';\r\nimport Spinner from '../spinner/Spinner';\r\n\r\nconst withStoreData = (WrappedComponent) => {\r\n    return () => {\r\n        const { loadingStatus } = useSelector(state => state.news);\r\n        const { category } = useSelector(state => state.news);\r\n        const news = useSelector(state => state.news.articles);\r\n\r\n        if(loadingStatus === 'loading') {\r\n            return <Spinner />\r\n        }else if(news.length === 0) {\r\n            return <h2>Статей нет</h2>\r\n        }\r\n\r\n        return (\r\n            <WrappedComponent news={news} category={category} />\r\n        )\r\n    }\r\n}\r\n\r\nexport default withStoreData;","import { Link } from 'react-router-dom';\r\nimport './latestPostItem.scss';\r\nimport noImage from '../../assets/no_image.jpg';\r\n\r\nconst LatestPostItem = ({category, title, author, url, urlToImage, date}) => {\r\n\r\n    const titleEdited = title.length > 50 ? title.slice(0, 50) + ' ...': title;\r\n    const authorEdited = author ? author : 'От редакции';\r\n    const editedImg = urlToImage ? urlToImage : noImage;\r\n \r\n    const onErrorImg = (e) => {\r\n        return e.type === 'error' ? e.target.src = noImage : null;\r\n        \r\n    }\r\n\r\n    return (\r\n        <li className=\"app-latest__item item-app-latest\">\r\n            <Link to={url} className=\"item-app-latest__link\">\r\n                <div className=\"item-app-latest__img\">\r\n                    <img onError={onErrorImg} src={editedImg} alt=\"author\" />\r\n                    <div className=\"item-app-latest__category\">{category.toUpperCase()}</div>\r\n                </div>\r\n                <h2 className=\"item-app-latest__title\">{titleEdited}</h2>\r\n                <div className=\"item-app-latest__footer\">\r\n                    <span className=\"item-app-latest__author\">{authorEdited}</span>\r\n                    {date}\r\n                </div>\r\n            </Link>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default LatestPostItem;","import withStoreData from '../HOC/withStoreData';\r\nimport { useState, memo, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { nanoid } from '@reduxjs/toolkit';\r\nimport { useHttp } from \"../hooks/http.hook\";\r\nimport { newsService } from \"../../service/newsService\";\r\nimport LatestPostItem from './LatestPostItem';\r\nimport withDate from '../HOC/withDate';\r\nimport './latestPost.scss';\r\n\r\nconst LatestPost = memo(({news, category}) => {\r\n    const [moreNews, setMoreNews] = useState([]);\r\n    const [moreNumber, setMoreNumber] = useState(2);\r\n    const [pageSizeNumber, setPageSizeNumber] = useState(8);\r\n    const { country } = useSelector(state => state.news);\r\n    const { request } = useHttp();\r\n    const { apiUrlHeadlines } = newsService();\r\n\r\n    const moreRef = useRef(null);\r\n\r\n    const handleMore = async() => {\r\n        moreRef.current.disabled = true;\r\n        const articles = await request(apiUrlHeadlines, {\r\n            method: 'POST', \r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            },\r\n            body: JSON.stringify({country, category, pageSize:pageSizeNumber, page:moreNumber})\r\n        });\r\n        setMoreNumber(state => state + 1);\r\n        setMoreNews(state => [...state, ...articles.articles])\r\n        if(articles.articles.length === 0 || articles.articles.length < pageSizeNumber) {\r\n            moreRef.current.style.display = 'none';\r\n        }\r\n        moreRef.current.disabled = false;\r\n    }\r\n    const elements = news ? news.map((item, i) => {\r\n            const LatestPostItemWithDate = withDate(LatestPostItem, {...item, category});\r\n            return (\r\n                <LatestPostItemWithDate key={nanoid()}/>\r\n            )\r\n        }) : <h2>Статей нет</h2>\r\n    const moreElements = moreNews && moreNews.map((item, i) => {\r\n        const LatestPostItemWithDate = withDate(LatestPostItem, {...item, category});\r\n        return (\r\n            <LatestPostItemWithDate key={nanoid()}/>\r\n        )\r\n    })\r\n    const listStyleNoArticles = news.length === 0 ? {gridTemplateRows: 'auto'} : {};\r\n    return (\r\n        <div className=\"app-latest\">\r\n            <h1 className=\"app-latest__title\">Последние статьи</h1>\r\n            <ul style={listStyleNoArticles} className=\"app-latest__list\">\r\n                {elements}\r\n                {moreElements}\r\n            </ul>\r\n            <button \r\n                ref={moreRef}\r\n                onClick={handleMore} \r\n                className=\"btn btn-more app-latest__more\">Еще\r\n            </button>\r\n        </div>\r\n    )\r\n})\r\n\r\nexport default withStoreData(LatestPost);"],"names":["date","dateEdited","Date","dateNow","utcMonth","getUTCMonth","utcDate","getUTCDate","utcHours","getUTCHours","utcMinutes","getUTCMinutes","utcNowMonth","utcNowDate","utcNowHours","utcNowMinutes","months","WrappedComponent","props","_dateChangeToUTC","dateChangeToUTC","publishedAt","_jsxs","className","children","concat","_jsx","_objectSpread","loadingStatus","useSelector","state","news","category","articles","Spinner","length","_ref","title","author","url","urlToImage","titleEdited","slice","authorEdited","editedImg","noImage","Link","to","onError","e","type","target","src","alt","toUpperCase","LatestPost","memo","_useState","useState","_useState2","_slicedToArray","moreNews","setMoreNews","_useState3","_useState4","moreNumber","setMoreNumber","_useState5","_useState6","pageSizeNumber","country","request","useHttp","apiUrlHeadlines","newsService","moreRef","useRef","handleMore","_ref2","_asyncToGenerator","_regeneratorRuntime","mark","_callee","wrap","_context","prev","next","current","disabled","method","headers","body","JSON","stringify","pageSize","page","sent","_toConsumableArray","style","display","stop","apply","arguments","elements","map","item","i","LatestPostItemWithDate","withDate","LatestPostItem","nanoid","moreElements","listStyleNoArticles","gridTemplateRows","ref","onClick","withStoreData"],"sourceRoot":""}